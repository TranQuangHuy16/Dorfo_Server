// <auto-generated />
using System;
using Dorfo.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Dorfo.Infrastructure.Migrations
{
    [DbContext(typeof(DorfoDbContext))]
    [Migration("20250930103847_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            // Entity MerchantCategory
            modelBuilder.Entity("Dorfo.Domain.Entities.MerchantCategory", b =>
            {
                b.Property<int>("MerchantCategoryId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer");

                NpgsqlPropertyBuilderExtensions
                    .UseIdentityByDefaultColumn(b.Property<int>("MerchantCategoryId"));

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<string>("Description")
                    .HasColumnType("text");

                b.Property<bool>("IsActive")
                    .HasColumnType("boolean");

                b.HasKey("MerchantCategoryId");

                b.ToTable("MerchantCategories");
            });

            // Entity Merchant (chỉ cần thêm quan hệ tới MerchantCategory)
            modelBuilder.Entity("Dorfo.Domain.Entities.Merchant", b =>
            {
                b.Property<Guid>("MerchantId")
                    .HasColumnType("uuid");

                b.Property<int?>("MerchantCategoryId")
                    .HasColumnType("integer");

                b.HasKey("MerchantId");

                b.HasIndex("MerchantCategoryId");

                b.ToTable("Merchants");
            });

            // Quan hệ Merchant ↔ MerchantCategory
            modelBuilder.Entity("Dorfo.Domain.Entities.Merchant", b =>
            {
                b.HasOne("Dorfo.Domain.Entities.MerchantCategory", "MerchantCategory")
                    .WithMany("Merchants")
                    .HasForeignKey("MerchantCategoryId")
                    .OnDelete(DeleteBehavior.Restrict);

                b.Navigation("MerchantCategory");
            });

            modelBuilder.Entity("Dorfo.Domain.Entities.MerchantCategory", b =>
            {
                b.Navigation("Merchants");
            });
#pragma warning restore 612, 618
        }
    }
}
